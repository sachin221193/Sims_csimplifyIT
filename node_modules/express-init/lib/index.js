// Generated by CoffeeScript 1.7.1
(function() {
  var async, recurseStack, _;

  _ = require('lodash');

  async = require('async');

  recurseStack = function(app, stack) {
    var s;
    if (!_(stack).isArray()) {
      stack = [stack];
    }
    s = stack.map(function(layer) {
      var init, _ref, _ref1, _ref2;
      if (((_ref = layer.route) != null ? _ref.stack : void 0) != null) {
        return recurseStack(app, layer.route.stack);
      } else if (((_ref1 = layer.handle) != null ? _ref1.stack : void 0) != null) {
        return recurseStack(app, layer.handle.stack);
      } else {
        init = layer.init || ((_ref2 = layer.handle) != null ? _ref2.init : void 0);
        if (init) {
          return function(callback) {
            if (init.done === true) {
              return callback();
            }
            return init(app, function(err) {
              init.done = !err;
              return callback(err);
            });
          };
        }
      }
    });
    return _(s).flatten().compact().valueOf();
  };

  module.exports = function(app, callback) {
    var initializers;
    initializers = recurseStack(app, app._router.stack);
    return async.series(initializers, function(err) {
      return callback(err);
    });
  };

}).call(this);
